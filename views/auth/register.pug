extends ../layout

block content
  .card.form-container
    h2 Join Python Quest
    form#registerForm
      .form-group
        label(for='username') Username
        input.form-control(type='text', id='username', name='username', placeholder='Choose a username', required, minlength='3', maxlength='20')
        
      .form-group
        label(for='email') Email
        input.form-control(type='email', id='email', name='email', placeholder='Enter your email', required)
        
      .form-group
        label(for='password') Password
        input.form-control(type='password', id='password', name='password', placeholder='Create a password', required, minlength='6')
        
      .form-group
        label(for='confirmPassword') Confirm Password
        input.form-control(type='password', id='confirmPassword', name='confirmPassword', placeholder='Confirm your password', required)
        
      button.btn.btn-primary(type='submit') Create Account
      
    .alert#alert(style='display: none;')
    
    p.
      Already have an account? 
      Login here

block scripts
  script.
    document.getElementById('registerForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const username = document.getElementById('username').value;
      const email = document.getElementById('email').value;
      const password = document.getElementById('password').value;
      const confirmPassword = document.getElementById('confirmPassword').value;
      const alertDiv = document.getElementById('alert');
      
      // Client-side validation
      if (password !== confirmPassword) {
        alertDiv.className = 'alert alert-error';
        alertDiv.textContent = 'Passwords do not match';
        alertDiv.style.display = 'block';
        return;
      }
      
      if (password.length < 6) {
        alertDiv.className = 'alert alert-error';
        alertDiv.textContent = 'Password must be at least 6 characters long';
        alertDiv.style.display = 'block';
        return;
      }
      
      if (username.length < 3) {
        alertDiv.className = 'alert alert-error';
        alertDiv.textContent = 'Username must be at least 3 characters long';
        alertDiv.style.display = 'block';
        return;
      }
      
      try {
        const response = await fetch('/api/auth/register', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ username, email, password })
        });
        
        const data = await response.json();
        
        if (response.ok) {
          // Show success message
          alertDiv.className = 'alert alert-success';
          alertDiv.textContent = 'Account created successfully! Please login.';
          alertDiv.style.display = 'block';
          
          // Clear form
          document.getElementById('registerForm').reset();
          
          // Redirect to login
          setTimeout(() => {
            window.location.href = '/login';
          }, 2000);
        } else {
          // Show error message
          alertDiv.className = 'alert alert-error';
          alertDiv.textContent = data.message || 'Registration failed';
          alertDiv.style.display = 'block';
        }
      } catch (error) {
        alertDiv.className = 'alert alert-error';
        alertDiv.textContent = 'Network error. Please try again.';
        alertDiv.style.display = 'block';
      }
    });
    
    // Check if already logged in
    const token = localStorage.getItem('token');
    if (token) {
      window.location.href = '/dashboard';
    }
    
    // Real-time password confirmation validation
    document.getElementById('confirmPassword').addEventListener('input', (e) => {
      const password = document.getElementById('password').value;
      const confirmPassword = e.target.value;
      
      if (confirmPassword && password !== confirmPassword) {
        e.target.style.borderColor = '#f44336';
      } else {
        e.target.style.borderColor = '';
      }
    });