//- views/dashboard.pug - Main Dashboard
extends layout

block content
  .hero
    h1 Welcome to Your Quest Dashboard
    p#welcomeMessage Ready for your next Python adventure?

  .card-grid
    .card
      h3 ðŸŽ® Create New Game
      p Start a new dungeon quest and invite friends to join your adventure.
      a.btn.btn-primary(href='/create-game') Create Game
      
    .card
      h3 ðŸšª Join Existing Game  
      p Enter a game code to join an ongoing quest with other players.
      a.btn.btn-secondary(href='/join-game') Join Game
      
    //- .card
    //-   h3 ðŸ“Š Your Stats
    //-   p#playerStats Loading your quest statistics...
    //-   .stats-grid
    //-     .stat-item
    //-       .stat-value#gamesPlayed -
    //-       .stat-label Games Played
    //-     .stat-item  
    //-       .stat-value#gamesWon -
    //-       .stat-label Victories
    //-     .stat-item
    //-       .stat-value#questionsAnswered -
    //-       .stat-label Questions Solved

block scripts
  script.
    document.addEventListener('DOMContentLoaded', async () => {
      // Get token from both localStorage and cookies to handle any inconsistency
      let token = localStorage.getItem('token') || localStorage.getItem('authToken');
      let user = localStorage.getItem('user');
      
      // If no token, redirect to login
      if (!token) {
        window.location.href = '/login';
        return;
      }
      
      // Parse user data
      try {
        user = JSON.parse(user || '{}');
      } catch (error) {
        console.error('Error parsing user data:', error);
        // Clear invalid data and redirect
        localStorage.clear();
        window.location.href = '/login';
        return;
      }
      
      // Update welcome message
      if (user.username) {
        document.getElementById('welcomeMessage').textContent = 
          `Welcome back, ${user.username}! Ready for your next Python adventure?`;
      }
      
      // Setup logout button
      const logoutBtn = document.getElementById('logout-btn');
      if (logoutBtn) {
        logoutBtn.addEventListener('click', function() {
          // Clear all possible token storage locations
          localStorage.removeItem('token');
          localStorage.removeItem('authToken');
          localStorage.removeItem('user');
          
          // Clear cookies by calling logout endpoint
          fetch('/api/auth/logout', {
            method: 'POST',
            credentials: 'include' // Include cookies in request
          }).then(() => {
            window.location.href = '/login';
          }).catch(() => {
            // Even if logout endpoint fails, redirect anyway
            window.location.href = '/login';
          });
        });
      }
      
      // Update navigation to show logout
      updateNavigation();
      
      // Load user statistics
      //- try {
      //-   const statsResponse = await fetch('/api/users/stats', {
      //-     headers: {
      //-       'Authorization': `Bearer ${token}`,
      //-       'x-auth-token': token // Include both header formats
      //-     }
      //-   });
      //-   if (statsResponse.ok) {
      //-     const stats = await statsResponse.json();
      //-     document.getElementById('gamesPlayed').textContent = stats.gamesPlayed || 0;
      //-     document.getElementById('gamesWon').textContent = stats.gamesWon || 0; 
      //-     document.getElementById('questionsAnswered').textContent = stats.questionsAnswered || 0;
      //-   } else if (statsResponse.status === 401) {
      //-     // Token expired, clear and redirect
      //-     localStorage.clear();
      //-     window.location.href = '/login';
      //-     return;
      //-   }
      //- } catch (error) {
      //-   console.error('Error loading stats:', error);
      //-   document.getElementById('playerStats').textContent = 'Error loading statistics';
      //- }
      
    });